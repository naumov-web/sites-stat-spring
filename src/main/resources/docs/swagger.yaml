swagger: "2.0"
info:
  title: "Sites statistic API"
  description: "Sites statistic API"
  version: "1.0.0"
schemes:
  - "http"
host: 127.0.0.1:9999
basePath: /api

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:

  /v1/auth/register:
    post:
      tags:
        - "auth"
      summary: "Register new user"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "RegisterRequestBody"
          in: "body"
          description: "Body of request for register of user"
          required: true
          schema:
            $ref: "#/definitions/RegisterRequestModel"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/DefaultSuccessResponseModel"
        400:
          description: "Validation error"
          schema:
            $ref: "#/definitions/DefaultValidationErrorsResponseModel"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"

  /v1/auth/login:
    post:
      tags:
        - "auth"
      summary: "Login of user"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - name: "LoginRequestBody"
          in: "body"
          description: "Body of request for login of user"
          required: true
          schema:
            $ref: "#/definitions/LoginRequestModel"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/DefaultSuccessResponseModel"
        400:
          description: "Validation error"
          schema:
            $ref: "#/definitions/DefaultValidationErrorsResponseModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"

  /v1/account/sites:
    get:
      tags:
        - "sites"
      summary: "Get list of sites"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: Authorization
          required: true
          type: string
        - in: "query"
          name: "limit"
          type: integer
          description: "Limit of items in response"
        - in: "query"
          name: "offset"
          type: integer
          description: "Offset of items in response"
        - in: "query"
          name: "sort_by"
          type: string
          description: "Sort by column"
          enum:
            - id
            - name
            - host
            - created_at
        - in: "query"
          name: "sort_direction"
          type: string
          description: "Sort direction"
          enum:
            - asc
            - desc
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/SitesListResponseModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
    post:
      tags:
        - "sites"
      summary: "Create of site"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "header"
          name: Authorization
          required: true
          type: string
        - name: "CreateSiteRequestBody"
          in: "body"
          description: "Body of request for creation of site"
          required: true
          schema:
            $ref: "#/definitions/CreateSiteRequestModel"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/DefaultSuccessResponseModel"
        400:
          description: "Validation error"
          schema:
            $ref: "#/definitions/DefaultValidationErrorsResponseModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"

  /v1/account/sites/{site}:
    put:
      tags:
        - "sites"
      summary: "Update of site"
      description: ""
      produces:
        - "application/json"
      consumes:
        - "application/json"
      parameters:
        - in: "header"
          name: Authorization
          required: true
          type: string
        - in: "path"
          name: "site"
          type: integer
          required: true
          description: "Id of site"
        - name: "UpdateSiteRequestBody"
          in: "body"
          description: "Body of request for updating of site"
          required: true
          schema:
            $ref: "#/definitions/UpdateSiteRequestModel"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/DefaultSuccessResponseModel"
        400:
          description: "Validation error"
          schema:
            $ref: "#/definitions/DefaultValidationErrorsResponseModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
    delete:
      tags:
        - "sites"
      summary: "Delete of site"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: Authorization
          required: true
          type: string
        - in: "path"
          name: "site"
          type: integer
          required: true
          description: "Id of site"
      responses:
        200:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/DefaultSuccessResponseModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"

  /v1/account/sites/{site}/api-keys:
    post:
      tags:
        - "api keys"
      summary: "Create API key for site"
      description: ""
      produces:
        - "application/json"
      parameters:
        - in: "header"
          name: Authorization
          required: true
          type: string
        - in: "path"
          name: "site"
          type: integer
          required: true
          description: "Id of site"
      responses:
        201:
          description: "Successful operation"
          schema:
            $ref: "#/definitions/DefaultSuccessResponseModel"
        401:
          description: "Unauthorized"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        404:
          description: "Not found"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"
        500:
          description: "Internal server error"
          schema:
            $ref: "#/definitions/DefaultErrorResponseModel"

definitions:

  DefaultSuccessResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string

  DefaultValidationErrorsResponseModel:
    type: object
    properties:
      errors:
        type: object

  DefaultErrorResponseModel:
    type: object
    properties:
      success:
        type: boolean
      message:
        type: string

  RegisterRequestModel:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string

  LoginRequestModel:
    type: object
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string

  CreateSiteRequestModel:
    type: object
    required:
      - name
      - host
    properties:
      name:
        type: string
      host:
        type: string

  SitesListResponseModel:
    type: object
    properties:
      count:
        type: integer
      items:
        type: array
        items:
          $ref: "#/definitions/SiteResponseModel"

  SiteResponseModel:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      host:
        type: string
      created_at:
        type: string

  UpdateSiteRequestModel:
    type: object
    required:
      - name
      - host
    properties:
      name:
        type: string
      host:
        type: string